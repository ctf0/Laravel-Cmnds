<?php

namespace App\Http\Request\DummyClass;

use App\Http\Requests\Request;
use Illuminate\Http\Exception\HttpResponseException;
use Illuminate\Contracts\Validation\Validator as ValidatorContract;

class DummyName extends Request
{
    protected $error_container = [];

    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return false;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            //
        ];
    }

    /**
     * Validate the class instance.
     */
    public function validate()
    {
        $instance = $this->getValidatorInstance();

        $this->validateExtra($instance);

        if ( ! $this->passesAuthorization()) {
            $this->failedAuthorization();
        } elseif ( ! $instance->passes()) {
            $this->failedValidation($instance);
        }
    }

    /**
     * Handle a failed validation attempt.
     *
     * @param \Illuminate\Contracts\Validation\Validator $validator
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    protected function failedValidation(ValidatorContract $contract)
    {
        throw new HttpResponseException(
            $this->response(
                array_replace_recursive(
                    $this->formatErrors($contract),
                    $this->error_container
                )
            )
        );
    }

    /**
     * any extra validation.
     *
     * @param [type] $instance [description]
     *
     * @return [type] [description]
     */
    protected function validateExtra($instance)
    {
        $request = $this->instance();

        $instance->after(function ($instance) use ($request) {

            $input_name = 'something';

            // https://ctf0.wordpress.com/2016/10/17/extend-formrequest-to-allow-more-functionality-in-laravel-v5-2/

        });
    }
}
